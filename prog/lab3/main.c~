#include <stdio.h>
#include <malloc.h>

struct MassObj {
	int x;
	int y;
};

int main(int argc, char *argv[])
{
	int i, j, k;
	int n;
	int **mass;
	int t, dir;
	struct MassObj obj;
	do {
		printf
		    ("\nEnter number of colomn,lines in massive(n mod 2==1) .. ");
		if (!scanf("%d", &n)) {
			printf("Input Error..\n");
			return -1;
		}
		if (n >= 1 && (n % 2) == 1) {
			break;
		}
	} while (1);
	mass = (int **)malloc(sizeof(int *) * n);
	for (i = 0; i < n; i++) {
		mass[i] = (int *)malloc(sizeof(int) * n);
	}
	obj.x = n / 2;
	obj.y = n / 2;
	k = 1;
	for (i = 0; i < n; i++)
		for (j = 0; j < n; j++)
			mass[i][j] = k++;
	printf("It is massive: \n\t");
	for (i = 0; i < n; i++) {
		for (j = 0; j < n; j++)
			printf("%d ", mass[i][j]);
		printf("\n\t");
	}
	printf("\rSpiral scan of the massive : \n\t");
	dir = 0;
	t = n - 1;
	do {
		switch (dir) {
		case 0:
			for (i = 0; i < (n - t); i++) {
				printf("%d ", mass[obj.y][obj.x]);
				obj.y--;
			}

			break;
		case 1:
			for (i = 0; i < (n - t); i++) {
				printf("%d ", mass[obj.y][obj.x]);
				obj.x--;
			}
			t--;
			break;
		case 2:
			for (i = 0; i < (n - t); i++) {
				printf("%d ", mass[obj.y][obj.x]);
				obj.y++;
			}
			break;
		case 3:
			for (i = 0; i < (n - t); i++) {
				printf("%d ", mass[obj.y][obj.x]);
				obj.x++;
			}
			t--;
			break;
		}
		if (dir >= 3)
			dir = 0;
		else
			dir++;
	} while (t >= 0 && obj.y >= 0);
	printf("\n");
	for (i = 0; i < n; i++)
		free(mass[i]);
	free(mass);
	return 0;
}
