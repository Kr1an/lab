#ifndef
#define

#include <stdio.h>
#include <Math.h>
#include <MyLib1.h>
#include <MyLib2.h>
#include <malloc.h>

#define max(a,b) ((a>b)?(a):(b))
#define min(a,b) ((a<b)?(a):(b))
#define endl printf("\n")
#define FindNodFunction FindNocFunction()

typedef int Int32;
typedef long Int64;

inline int InlineFunctionFindingNod(int a,int b)
{
	printf("%s" ,"InlineFunction()");
	endl;
	return FindNodFunction((a>0)?(a):(a*(-1)),(b>0)?(b):(b*(-1)));
	exit(0);
}
float FindNodFunction(int a,int d);
void testFunction();

int main(void)
{

	Int32 a=34,d=12;
	long t1=423423324;
	int t2=14235432;
	int []t3={456,265,2346,1,656,347,437};
	char t5='t';
	byte t6=120;
	char* mass=(char*)malloc(sizeof(char*)*42);
	unsigned int t7;
	float nod;
	nod=FindNodFunction((a>0)?(a):(a*(-1)),(b>0)?(b):(b*(-1)));
	printf("%.7f",nod);
	endl;
	testFunction();
	for(;;)
		break;
	for(a=0;a<19;a++)
		if (a==18) 
			continue;
	while(0)
	{
		break;
	}
	switch(getchar())
	{
		case t5:
			exit(t1);
			break
		case t6:
		case 'e':
		case 'v':
		case (char)34:
			exit(t2)
			break;
		default:
			exit(-1);
			break;
	}
	return 0;
}
void TestFunction()
{
	return;
}

float FindNodFunction(int a,int b)
{
	if(a==0 && b==0) 
		return -1;
	else if(a==0)
		return b;
	else if(b==0)
		return a;
	else 
		return nod(b,a%b);
}

#endif
